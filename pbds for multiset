#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
#define ordered_set tree<pair<long long int,int> ,null_type,less<pair<long long int,int>>, rb_tree_tag,tree_order_statistics_node_update>
  
#define vt vector
#define ll long long 
#define rep(i, a, n) for(int i = a ; i<n; i ++)
class Solution {
public:
    int countRangeSum(vector<int>& nums, int lower, int upper) {
        ll sum = 0;
        ordered_set o_set; 
        o_set.insert({0 , -1});
        ll sol = 0;
        rep(i , 0 , nums.size()){
           sum += nums[i];
           sol +=  o_set.order_of_key({sum - lower+1,-2})  - o_set.order_of_key({sum-upper,-2});
           o_set.insert({sum,i});
           
        }
        return sol;
    }
};
