#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
vector<ll>timerc(2e5+1, 0);
vector<ll>timerg(2e5+1,0);
ll t = 0 ;
bool isancsestor(ll u , ll v){
  if( u == 0){
    return true;
  }
  if(timerc[u] <= timerc[v] && timerg[u] >= timerg[v]){
    return true;
  }
  return  false;
}
ll lca(ll u , ll v, ll l , vector<vector<ll>>&up){
   if(isancsestor(u , v)){
    return u ;
   }
   if(isancsestor(v, u)){
    return v;
   }
   if( u == v){
    return u;
   }
 
   for(int i = l  -1 ; i>=0 ; i-- ){
    if(!isancsestor(up[i][u] , v))
    {
      u = up[i][u];
    }
   }
   return up[0][u];
}
void dfs(vector<vector<ll>>& g , ll p , ll st , vector<vector<ll>>&up){
     up[0][st] = p;
     for(ll i = 1 ; i<up.size() ; i++){
        up[i][st] = up[i-1][up[i-1][st]];
     }
     timerc[st] = ++t;
     for(ll i = 0 ; i<g[st].size(); i++){
         if(g[st][i] != p){ 
            dfs(g ,st, g[st][i] , up);
         }
     }
     timerg[st] = ++t;
}
int main(){
  ll n , q;
  cin>>n>>q;
  vector<vector<ll>>g(n+1 );
  
  for(ll i = 2 ; i<=n ;i++){
    ll x ;
    cin>>x;
    g[x].push_back(i);
  } 
  ll N = ceil(double(log2(n)));
  vector<vector<ll>>up(N, vector<ll>(n+1 , 0));
  dfs(g, 0, 1 ,up );
  // for(ll i = 0 ; i<up.size() ; i++){
  //   for(ll j = 0 ; j<n+1; j++){
  //     cout << up[i][j]<<" ";
  //   }
  //   cout <<"\n";
  // }
  while(q--){
    ll u , v;
    cin>>u>>v;
     cout <<  lca(u , v, up.size(), up )<<"\n";
  }
}
