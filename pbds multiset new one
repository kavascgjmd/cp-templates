#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp> 
using namespace __gnu_pbds; 
#define ordered_set tree<int, null_type,less_equal<int>, rb_tree_tag,tree_order_statistics_node_update>
void myerase(ordered_set & t, int v){
  int rank = t.order_of_key(v);
  ordered_set::iterator it = t.find_by_order(rank);
  t.erase(it);
}
// order of key -> number of elements strictly smaller than k
// find by order -> kth element counting from 0
